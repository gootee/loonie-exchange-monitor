@import 'reset';
@import url('https://fonts.googleapis.com/css?family=Staatliches|Thasadith');
@import url('https://fonts.googleapis.com/css2?family=Philosopher:ital,wght@0,400;1,700&display=swap');

$canadaRed: rgb(243, 8, 8);

html,
body
{
  height: 100vh;
  background: #ffffff;
}

html {
  box-sizing: border-box;
}

.App {
  text-align: center;
  height: 100%;
}

.header {
  background-color: $canadaRed;
  min-height: 10%;
  color: white;

  .h1Font {
    margin-top: 0;
    font-size: 2.052em;
    font-family: 'Philosopher';
    color: black;
    font-weight: bold;
    -webkit-text-fill-color: white; 
  }
}

.main {
  min-height: 90%;
  background: white;

  .h2FontWhite {
    font-size: 3.1em;
    font-family: 'Staatliches', cursive;
    -webkit-text-stroke-width: 1px;
    -webkit-text-stroke-color: black;
    -webkit-text-fill-color: white;
  }

  .h2FontRed {
    font-size: 3.1em;
    font-family: 'Staatliches', cursive;
    -webkit-text-fill-color: $canadaRed;
    -webkit-text-stroke-width: 1px;
    -webkit-text-stroke-color: black;
  }

  .h3Font {
    font-size: 1.8em;
    font-family: 'Philosopher';
  }

  .h4Font {
    font-size: 0.863em;
    font-family: 'Philosopher';
  }

  .toggle {
    --width: 210px;
    --height: calc(var(--width) / 2);
    --border-radius: calc(var(--height) / 2);
    display: inline-block;
    cursor: arrow;

    .toggle_input {
      display: none;
    }  

    .toggle_fill {
      position: relative;
      width: var(--width);
      height: var(--height);
      border-radius: var(--border-radius);
      background: #dddddd;
      transition: background 0.2s;
    }
    
    .toggle_input:checked ~ .toggle_fill {
      background: $canadaRed;
    }
    
    .toggle_fill::after {
      content: "";
      position: absolute;
      top: 0;
      left: 0;
      height: var(--height);
      width: var(--height);
      background: #ffffff;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.25);
      border-radius: var(--border-radius);
      transition: transform 0.2s;
    }
    
    .toggle_input:checked ~ .toggle_fill::after {
      transform: translateX(var(--height));
    }
    
    .buy_sell_container {
      min-width: var(--height);

      .buy_sell_label {
        text-align: center;
      }
    }
  }
}